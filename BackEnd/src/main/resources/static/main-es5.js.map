{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","showLogin","showRegister","selectFileTouched","selectedFileName","isValidImageFile","loginForm","loginModel","loginFields","key","type","templateOptions","label","placeholder","minLength","maxLength","required","validators","validation","registerForm","registerModel","registerFields","name","options","errorPath","fieldGroup","value","valid","console","log","choice","event","fr","FileReader","selectedFile","target","files","img","Image","onload","width","height","src","result","readAsDataURL","onLoginSubmit","loadPage","onFileChanged","onRegisterSubmit","selector","templateUrl","styleUrls","appearance","EmailValidator","control","test","EmailValidatorMessage","err","field","formControl","PasswordValidator","PasswordValidatorMessage","TelephoneValidator","TelephoneValidatorMessage","ImageFileSize","passwordMatchValidator","password","passwordConfirm","passwordMatch","message","AppModule","provide","useValue","forRoot","validationMessages","declarations","imports","providers","bootstrap","MainComponent","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ValidationErrors } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent \n{\n  showLogin: boolean = false;\n  showRegister: boolean = true;\n  selectFileTouched: boolean = false;\n  selectedFileName: string = \"\";\n  isValidImageFile: boolean = false;\n  selectedFile: File\n\n  loginForm = new FormGroup({});\n  loginModel = {};\n  loginFields: FormlyFieldConfig[] = \n  [\n    {\n      key: 'email',\n      type: 'input',\n      templateOptions: \n      {\n        type: 'email',\n        label: 'Email',\n        placeholder: 'Email',\n        minLength: 6,\n        maxLength: 30,\n        required: true,\n      },\n      validators: \n      {\n        validation: ['email'],\n      },\n    },\n    {\n      key: 'password',\n      type: 'input',\n      templateOptions: \n      {\n        type: 'password',\n        label: 'Password',\n        placeholder: 'Password',\n        minLength: 6,\n        maxLength: 30,\n        required: true,\n      },\n      validators: { validation: ['password'] },\n    }\n  ];\n\n  registerForm = new FormGroup({});\n  registerModel = {};\n  registerFields: FormlyFieldConfig[] = \n  [    \n    {\n      key: 'firstName', type: 'input', templateOptions: { label: 'First Name', },\n    },\n    {\n      key: 'lastName', type: 'input', templateOptions: { label: 'Last Name', },\n    },\n    {\n      key: 'email', type: 'input', templateOptions: { type: 'email', label: 'Email', placeholder: 'Email', minLength: 6, maxLength: 30, },\n      validators: { validation: ['email'], },\n    },\n    { \n      validators: { validation: [ { name: 'passwordMatch', options: { errorPath: 'passwordConfirm' } }, ], },\n      fieldGroup: \n      [\n        {\n          key: 'password', type: 'input', templateOptions: { type: 'password', label: 'Password', placeholder: 'Must be at least 3 characters', minLength: 3, },\n        },\n        {\n          key: 'passwordConfirm', type: 'input', templateOptions: { type: 'password', label: 'Confirm Password', placeholder: 'Please re-enter your password', },\n        },\n      ],\n    },\n    {\n      key: 'telephone', type: 'input', templateOptions: { label: 'Telephone', placeholder: 'Telephone', },\n      validators: { validation: ['telephone'] },\n    },\n    {\n      key: 'genderSelect', type: 'select',\n      templateOptions: \n      {\n        label: 'Gender', placeholder: 'Placeholder', options: [ { value: 1, label: 'Male'  }, { value: 2, label: 'Female'  }, { value: 3, label: 'Other' } ],\n      },\n    },\n    { \n      key: 'Datepicker', type: 'datepicker', templateOptions: { label: 'Date of birth', placeholder: 'Date of birth', },\n    },\n  ];\n\n  onLoginSubmit()\n  {\n    if (this.loginForm.valid) \n    {\n      console.log(this.loginModel);\n    }\n  }\n\n  onRegisterSubmit()\n  {\n    if (this.registerForm.valid) \n    {\n      console.log(this.registerModel );\n    }\n  }  \n\n  loadPage(choice: string)\n  {\n    if(choice === 'register')\n    {\n      this.showLogin = false;\n      this.showRegister = true;\n    }\n  }\n\n  onFileChanged(event)\n  {\n    let fr = new FileReader;\n    this.selectFileTouched = true;\n    this.selectedFile = event.target.files[0];\n    this.selectedFileName = this.selectedFile.name;\n    let img = new Image();\n    fr.onload = () => \n    {\n      img.onload = () => \n      {\n         console.log(img.width + \" \" + img.height);\n         if(img.width == 400 && img.height == 400)\n         {\n           this.isValidImageFile = true;\n           this.selectedFile = event.target.files[0];\n           this.selectedFileName = this.selectedFile.name;\n          //  this.uploadData.append('imageFile', this.selectedFile, this.selectedFile.name);\n         }          \n         else\n         this.isValidImageFile = false;\n      }; \n      img.src = <string>fr.result;\n    };\n    fr.readAsDataURL(event.target.files[0]);\n  }\n}","<div [style.display]=\"showLogin ? 'flex': 'none'\" class=\"loginPageStyle\">\n  <div class=\"startPageTitle\">FriendBook</div>\n  <form class=\"loginFormStyle\" [formGroup]=\"loginForm\">\n    <formly-form [form]=\"loginForm\" [model]=\"loginModel\" [fields]=\"loginFields\"></formly-form>\n    <div class=\"loginButtonGroup\">\n      <button [disabled]=\"loginForm.invalid\" (click)=\"onLoginSubmit()\" mat-raised-button color=\"primary\">Login</button>\n      <button (click)=\"loadPage('register')\" mat-raised-button color=\"primary\">Register</button>\n    </div>\n  </form>\n</div>\n\n<div [style.display]=\"showRegister ? 'flex': 'none'\" class=\"loginPageStyle\">\n  <div class=\"startPageTitle\">FriendBook Registration</div>\n  <form class=\"registerFormStyle\" [formGroup]=\"registerForm\">\n    <formly-form [form]=\"registerForm\" [model]=\"registerModel\" [fields]=\"registerFields\"></formly-form>    \n    <p>\n      <input style=\"display: none\" type=\"file\" accept=\".jpg,.jpeg\" (change)=\"onFileChanged($event)\" #fileInput>\n      <button type=\"button\" (click)=\"fileInput.click()\">Select Display Picture</button>\n    </p>\n    <mat-error [style.display]=\"(selectFileTouched && !isValidImageFile) ? 'inline': 'none'\" class=\"error-message\">Wrong Image Size</mat-error>\n    <mat-label>{{selectedFileName}}</mat-label>\n  </form>\n  <button [disabled]=\"registerForm.invalid\" (click)=\"onRegisterSubmit()\" mat-raised-button color=\"primary\">Register</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormControl, ValidationErrors, AbstractControl } from '@angular/forms'\nimport { FormlyModule, FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyMaterialModule } from '@ngx-formly/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormlyMatDatepickerModule } from '@ngx-formly/material/datepicker';\nimport { MainComponent } from './components/main/main.component';\n\nconst appearance: MatFormFieldDefaultOptions = { appearance: 'outline' };\n\nexport function EmailValidator(control: FormControl): ValidationErrors \n{\n\treturn !control.value || /^[a-zA-Z0-9.!#$%&'*+=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(control.value) ? null : { 'email': true };\n}\n\nexport function EmailValidatorMessage(err, field: FormlyFieldConfig) \n{\n\treturn `\"${field.formControl.value}\" is not a valid email address`;\n}\n\nexport function PasswordValidator(control: FormControl): ValidationErrors \n{\n\treturn !control.value || /^[a-zA-Z0-9.!#$%&'*+=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(control.value) ? null : { 'password': true };\n}\n\nexport function PasswordValidatorMessage(err, field: FormlyFieldConfig) \n{\n\treturn `\"${field.formControl.value}\" is not a valid password`;\n}\n\nexport function TelephoneValidator(control: FormControl): ValidationErrors \n{\n\treturn !control.value || /^[\\+][0-9]{1,3}[0-9]{4,14}$/.test(control.value) ? null : { 'telephone': true };\n}\n\nexport function TelephoneValidatorMessage(err, field: FormlyFieldConfig) \n{\n\treturn `\"${field.formControl.value}\" is not a valid telephone number`;\n}\n\nexport function ImageFileSize(err, field: FormlyFieldConfig) \n{\n\treturn `Image is large`;\n}\n\nexport function passwordMatchValidator(control: AbstractControl) \n{\n  const { password, passwordConfirm } = control.value;\n\n  // avoid displaying the message error when values are empty\n  if (!passwordConfirm || !password) {\n    return null;\n  }\n\n  if (passwordConfirm === password) {\n    return null;\n  }\n\n  return { passwordMatch: { message: 'Password Not Matching' } };\n}\n\n@NgModule({\n  declarations: \n  [\n    AppComponent,\n    MainComponent,\n  ],\n  imports: \n  [ \n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,    \n    ReactiveFormsModule,\n    HttpClientModule,\n    FormlyModule.forRoot({\n      validationMessages: \n      [\n        { name: 'password', message: PasswordValidatorMessage },\n        { name: 'telephone', message: TelephoneValidatorMessage },\n        { name: 'email', message: EmailValidatorMessage },\n      ],\n      validators: \n      [\n\t\t\t\t{ name: 'password', validation: PasswordValidator },\n\t\t\t\t{ name: 'telephone', validation: TelephoneValidator },\n        { name: 'email', validation: EmailValidator },\n        { name: 'passwordMatch', validation: passwordMatchValidator },\n      ],\n    }),\n    MatNativeDateModule,\n    FormlyMaterialModule,\n    FormlyMatDatepickerModule,\n    HttpClientModule,\n  ],\n  providers: \n  [\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: appearance }\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>main works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}